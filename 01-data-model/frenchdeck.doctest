Test FrenchDeck


>>> from frenchdeck import FrenchDeck, Card


Test create a card
>>> beer_card = Card('7', 'diamonds')
>>> beer_card
Card(rank='7', suit='diamonds')

Test `len` function
>>> deck = FrenchDeck()
>>> len(deck)
52

Test index of a deck
>>> deck[:3]        # doctest: +NORMALIZE_WHITESPACE
[Card(rank='2', suit='spades'), Card(rank='3', suit='spades'),
Card(rank='4', suit='spades')]

Test index of a deck
>>> deck[12::13]    # doctest: +NORMALIZE_WHITESPACE
[Card(rank='A', suit='spades'), Card(rank='A', suit='diamonds'),
Card(rank='A', suit='clubs'), Card(rank='A', suit='hearts')]


>>> Card('Q', 'hearts') in deck
True



>>> Card('Z', 'clubs') in deck
False


>>> for card in deck:  # doctest: +ELLIPSIS
...   print(card)
Card(rank='2', suit='spades')
Card(rank='3', suit='spades')
Card(rank='4', suit='spades')
...


>>> for card in reversed(deck):  # doctest: +ELLIPSIS
...   print(card)
Card(rank='A', suit='hearts')
Card(rank='K', suit='hearts')
Card(rank='Q', suit='hearts')
...


Test iterator over deck
>>> for n, card in enumerate(deck, 1):  # doctest: +ELLIPSIS
...   print(n, card)
1 Card(rank='2', suit='spades')
2 Card(rank='3', suit='spades')
3 Card(rank='4', suit='spades')
...
